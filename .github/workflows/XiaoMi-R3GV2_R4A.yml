#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
###############手动修改##############
name: XiaoMi-R3GV2_R4A-lede

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      clash:
        description: 'build clash'
        required: true
        default: false
        type: boolean
      pinpin:
        description: 'build pinpinWifi'
        required: true
        default: false
        type: boolean
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 16 * * *

env:
  ###############手动修改##############
  OPENWRT_NAME: lede
  UPLOAD_TAG_NAME: xiaomi-r3gv2_r4a
  REPO_URL: https://github.com/coolsnowwolf/lede
  PINPIN_REPO_URL: https://github.com/wiwizcom/WiFiPortal
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: XiaoMi-R3GV2_R4A/.config
  DIY_P1_SH: XiaoMi-R3GV2_R4A/diy-part1.sh
  DIY_P2_SH: XiaoMi-R3GV2_R4A/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    permissions:
      contents: write

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 清理磁盘空间(Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # when set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: false
        dotnet: false
        haskell: false
        large-packages: false
        swap-storage: false

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载拼拼WIFI插件
      if: github.event.inputs.pinpin == 'true'
      working-directory: /workdir
      run: |
        git clone $PINPIN_REPO_URL -b main pinpin
        cd pinpin
        cp -r autokick-wiwiz /workdir/openwrt/package/
        cp -r dcc2-wiwiz /workdir/openwrt/package/
        cp -r eqos-master-wiwiz /workdir/openwrt/package/
        cp -r wifidog-wiwiz /workdir/openwrt/package/

    - name: 加载feeds.conf.default & DIY_P1_SH
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 应用patch & 更新安装 feeds
      run: |
        cp XiaoMi-R3GV2_R4A/xiaomi-r3gv2_r4a.patch openwrt/xiaomi-r3gv2_r4a.patch
        cd openwrt
        git apply xiaomi-r3gv2_r4a.patch
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载config
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: 加载DIY_P2_SH
      if: github.event.inputs.clash == 'true'
      run: |
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSH链接管理
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 下载安装包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        sed -nE 's/.*(192.168\.[0-9]+\.[0-9]+).*/\1/p' package/base-files/files/bin/config_generate | head -n 1 > IP_ADDR
        [ -s IP_ADDR ] && echo "IP_ADDR=$(cat IP_ADDR)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件并重命名
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: | 
        mapfile -t devices < <(grep '^CONFIG_TARGET_DEVICE.*=y' openwrt/.config | sed -r 's/.*DEVICE_(.*)=y/\1/')
        cd openwrt/bin/targets/*/*
        rm -rf packages
        sudo -E apt-get -qq install rename
                for val in "${devices[@]}"; do
          rename "s/.*${val}/${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${val}${{ env.BUILD_DOCKERMAN }}/" *
          echo "$val"
        done
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 打包上传固件到Actions Artifacts
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.UPLOAD_TAG_NAME }}${{ env.BUILD_DOCKERMAN }}
        path: ${{ env.FIRMWARE }}

    - name: 生成固件Release标签
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        touch release.txt
        echo "- 使用源码：${{ env.REPO_URL }}" >> release.txt
        echo "- 登录地址：${{ env.IP_ADDR }}" >> release.txt
        echo "release_tag=${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.UPLOAD_TAG_NAME }}${{ env.BUILD_DOCKERMAN }}" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 发布固件至Release
      uses: softprops/action-gh-release@v2.1.0
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ env.FIRMWARE }}/*
        name: ${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.UPLOAD_TAG_NAME }}${{ env.BUILD_DOCKERMAN }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
